#!/bin/sh
#=============================================================================
#
#  Program:   GCC-XML
#  Module:    $RCSfile: gccxml_find_flags,v $
#  Language:  C++
#  Date:      $Date: 2008-12-15 20:25:23 $
#  Version:   $Revision: 1.4 $
#
#  Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.
#  See Copyright.txt for details.
#
#     This software is distributed WITHOUT ANY WARRANTY; without even 
#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
#     PURPOSE.  See the above copyright notices for more information.
#
#=============================================================================

# Find the compiler executable name.
if test "x$1" = "x" ; then
  if test "x$GCCXML_COMPILER" = "x"; then
    if test "x${CXX}" != "x" ; then
      GCCXML_COMPILER="${CXX}"
    else
      echo "Need to specify compiler name or set GCCXML_COMPILER or CXX."
      exit 1
    fi
  fi
  if test "x$GCCXML_CXXFLAGS" = "x"; then
    if test "x${CXXFLAGS}" != "x" ; then
      GCCXML_CXXFLAGS="${CXXFLAGS}"
    fi
  fi
else 
  GCCXML_COMPILER="$1"
  shift
  GCCXML_CXXFLAGS="$@"
fi

die()
{
  echo $1
  exit 1
}

# The support directories are located near this script.
SELFPATH=`cd "\`echo $0 | sed -n '/\//{s/\/[^\/]*$//;p;}'\`";pwd`

# Run the compiler's preprocessor to identify it.
# (workaround for CC whitespace:)
PPOUT=`(${GCCXML_COMPILER} ${GCCXML_CXXFLAGS} \
         -E "${SELFPATH}/gccxml_identify_compiler.cc" \
         | sed -e 's/[ ^]//g'
)` || die "Error running \"${GCCXML_COMPILER} -E\""

# Parse the result to get the settings found.
GCCXML_SUPPORT=`echo "${PPOUT}" |
  sed -n '/GCCXML_SUPPORT/ {s/GCCXML_SUPPORT="\(.*\)"/\1/;p;}'`

# Check if a supported compiler was identified.
if test "x$GCCXML_SUPPORT" = "x" ; then
  echo "Compiler \"${GCCXML_COMPILER}\" is not supported by GCC-XML."
  exit 1
fi

# Find the compiler-specific support directory.
if test -d "${SELFPATH}/${GCCXML_SUPPORT}" ; then
  GCCXML_SUPPORT_DIR="${SELFPATH}/${GCCXML_SUPPORT}"
else
  echo "Cannot find GCC_XML compiler support directory ${GCCXML_SUPPORT}."
  exit 1
fi

# Run the compiler-specific flag finding script.
GCCXML_FLAGS=`"${GCCXML_SUPPORT_DIR}/find_flags" ${GCCXML_COMPILER} ${GCCXML_CXXFLAGS}`

# Display the output.
echo ${GCCXML_FLAGS}
